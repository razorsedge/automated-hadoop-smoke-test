# shellcheck shell=bash
# Set true for services to be tested (Use true/false)
ZOOKEEPER="false"
HDFS="true"
MAPREDUCE="false"
HIVE="false"
HBASE="false"
IMPALA="false"
SPARK="false"
SPARK2="false"
PYSPARK="false"
PYSPARK2="false"
PIG="false"
SOLR="false"
KAFKA="false"
KUDU="false"
KUDU_SPARK="false"
NIFI="false"
OZONE="false"

# Specify if Kerberos security enabled or not
KERBEROS_SECURITY="false" # <-- verify (true/false)

# ZooKeeper details
#if [ -f /etc/hadoop/conf/hdfs-site.xml ]; then
#  ZOOKEEPER_QUORUM=$(xmllint --xpath 'string(/configuration/property[name="ha.zookeeper.quorum"]/value)' /etc/hadoop/conf/hdfs-site.xml)
#  # yarn-site.xml yarn.resourcemanager.zk-address
#  # yarn-site.xml hadoop.registry.zk.quorum
#  if [ -z "$ZOOKEEPER_QUORUM" ]; then exit; fi
#else
#  ZOOKEEPER_QUORUM="localhost:2181" # <-- update
#fi
ZOOKEEPER_QUORUM="localhost:2181" # <-- update
ZOOKEEPER_QUORUM_PATH="/zk_SmokeTest"

# HDFS details
HDFS_PATH="/tmp/SmokeTest/HDFS"
LOC_PATH="/etc/hosts"
TEMP_PATH="./HDFSOutTemp"

# MapReduce details 
MAP_REDUCE_IN="/tmp/SmokeTest/MRIn/"
MAP_REDUCE_OUT="/tmp/SmokeTest/MROut/"
# Possible locations for JAR
# CDH: /opt/cloudera/parcels/CDH/jars/hadoop-examples.jar
# HDP: /usr/hdp/current/hadoop-mapreduce-client/hadoop-mapreduce-examples.jar
# CDP: /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar
MAP_REDUCE_JAR="/opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar" # <-- verify

# Hive details
HIVESERVER2="localhost:10000" # <-- update
HIVE_TABLE_NAME="hive_smoke_test" # <-- update
# Hive Security
HIVE_SSL_ENABLED="false" # <-- verify (true/false)
BEELINE_USER="hive"
BTOPTS=";ssl=true;sslTrustStore=/etc/pki/java/cacerts;trustStorePassword=changeit"

# HBase details
HBASE_TABLE_NAME="hbase_smoke_test" # <-- update

# Impala
IMPALA_DAEMON="localhost:21000" # <-- update
IMPALA_DATABASE_NAME="default" # <-- update
IMPALA_TABLE_NAME="impala_smoke_test" # <-- update
# Impala-shell Security
IMPALA_SSL_ENABLED="false" # <-- verify (true/false)
IMPALA_KERBEROS_ENABLED="false" # <-- verify (true/false)
IMPALA_LDAP_ENABLED="false" # <-- verify (true/false)
IKOPTS="--kerberos"
ILOPTS="--ldap --user $USER --ldap_password_cmd=./conf/ldap_pass.sh" # <-- edit ldap_pass.sh
ITOPTS="--ssl --ca_cert=/opt/cloudera/security/x509/ca-chain.cert.pem"

# Spark & Spark2 details
SPARK_IN_CLUS="/tmp/SmokeTest/SparkIn"
SPARK_OUT_CLUS="/tmp/SmokeTest/SparkOut"

# pySpark & pySpark2 details
PYSPARK_IN_CLUS="/tmp/SmokeTest/SparkIn"
PYSPARK_OUT_CLUS="/tmp/SmokeTest/SparkOut"

# Pig details
PIG_PATH_IN="/tmp/SmokeTest/data"
PIG_PATH_OUT="/tmp/SmokeTest/pigOut"

# Solr details
SOLR_SERVER="localhost:8983" # <-- update
SOLR_COLLECTION_NAME="solr_smoke_test" # <-- update
SOLR_INSTANTDIR_NAME="solr_smoke_test_config" # <-- update
SOLR_EXAMPLE_HOME="/opt/cloudera/parcels/CDH/share/doc/solr-doc-*/example" # <-- verify
#SOLR_OPS="-Djava.security.auth.login.config=./conf/jaas-client.conf -Dbasicauth=user:pass"
SOLR_CURL_OPS="--negotiate -u :"
# Solr security
SOLR_SSL_ENABLED="false" # <-- verify (true/false)

# Kafka details
# Unsecured/Unauthenticated   = PLAINTEXT
# TLS Client AuthN (over TLS) = SSL
# Kerberos in the clear       = SASL_PLAINTEXT
# Kerberos over TLS           = SASL_SSL
#
# Read the files in conf/kafka.conf-* as they may need parts updated.
KAFKA_SECURITY_TYPE="PLAINTEXT" # <-- verify (PLAINTEXT/SSL/SASL_PLAINTEXT/SASL_SSL)
if [ -f /etc/kafka/conf/kafka-client.conf ]; then
  KAFKA_ZOOKEEPER_QUORUM=$(awk -F= '$1~/^zookeeper.connect$/{print $2}' /etc/kafka/conf/kafka-client.conf) # <-- update
else
  KAFKA_ZOOKEEPER_QUORUM="localhost:2181/kafka" # <-- update if not running on a Kafka Gateway
fi
KAFKA_HOST="localhost:9092" # <-- update
TOPIC_NAME="kafka_smoke_test" # <-- update
KAFKA_INP_LOC="/etc/hosts"
KAFKA_OUP_LOC="/tmp/hosts"

# Kudu_Details
KUDU_TABLE_NAME="kudu_smoke_test" # <-- update

# Kudu_Spark Details
KUDU_MASTER="localhost:7051" # <-- update
KUDU_SPARK2_TABLE_NAME="kudu_spark2_smoke_test" # <-- update
KUDU_SPARK2_JAR="/opt/cloudera/parcels/CDH/jars/kudu-spark2_2.11-*.jar" # <-- verify

# Nifi Details
NIFI_HOST="localhost:8080" # <-- update
HADOOP_CORE_SITE_PATH="/etc/hadoop/conf/core-site.xml" # <-- verify
HADOOP_HDFS_SITE_PATH="/etc/hadoop/conf/hdfs-site.xml" # <-- verify
TEMP_HDFS_DIRECTORY="/tmp/nifiTest"
# Nifi Security
NIFI_SSL_ENABLED="false" # <-- verify (true/false)
NIFI_USER=
NIFI_PASSWORD=

# Ozone details
OZONE_VOLUME="smoketestvol" # <-- update
OZONE_BUCKET="smoketestbucket"
OZONE_LOC_PATH="/etc/hosts"
OZONE_TEMP_PATH="./OzoneOutTemp"
if [ -f /etc/ozone/conf/ozone-site.xml ]; then
  OZONE_SERVICE_ID=$(xmllint --xpath 'string(/configuration/property[name="ozone.service.id"]/value)' /etc/ozone/conf/ozone-site.xml)
else
  OZONE_SERVICE_ID="changeme" # <-- update if not running on an Ozone Gateway
fi

# log details
LOG_PATH="./log"

################################################################################
################################################################################
# DO NOT EDIT BELOW THIS LINE.

export ZOOKEEPER
export HDFS
export MAPREDUCE
export HIVE
export HBASE
export IMPALA
export SPARK
export SPARK2
export PYSPARK
export PYSPARK2
export PIG
export SOLR
export KAFKA
export KUDU
export KUDU_SPARK
export NIFI
export OZONE
export KERBEROS_SECURITY
export ZOOKEEPER_QUORUM
export ZOOKEEPER_QUORUM_PATH
export HDFS_PATH
export LOC_PATH
export TEMP_PATH
export MAP_REDUCE_IN
export MAP_REDUCE_OUT
export MAP_REDUCE_JAR
export HIVESERVER2
export HIVE_TABLE_NAME
export HIVE_SSL_ENABLED
export BEELINE_USER
export BTOPTS
export HBASE_TABLE_NAME
export IMPALA_DAEMON
export IMPALA_DATABASE_NAME
export IMPALA_TABLE_NAME
export IMPALA_SSL_ENABLED
export IMPALA_KERBEROS_ENABLED
export IMPALA_LDAP_ENABLED
export IKOPTS
export ILOPTS
export ITOPTS
export SPARK_IN_CLUS
export SPARK_OUT_CLUS
export PYSPARK_IN_CLUS
export PYSPARK_OUT_CLUS
export PIG_PATH_IN
export PIG_PATH_OUT
export SOLR_SERVER
export SOLR_COLLECTION_NAME
export SOLR_INSTANTDIR_NAME
export SOLR_EXAMPLE_HOME
export SOLR_OPS
export SOLR_CURL_OPS
export SOLR_SSL_ENABLED
export KAFKA_SECURITY_TYPE
export KAFKA_ZOOKEEPER_QUORUM
export KAFKA_HOST
export TOPIC_NAME
export KAFKA_INP_LOC
export KAFKA_OUP_LOC
export KUDU_TABLE_NAME
export KUDU_MASTER
export KUDU_SPARK2_TABLE_NAME
export KUDU_SPARK2_JAR
export NIFI_HOST
export HADOOP_CORE_SITE_PATH
export HADOOP_HDFS_SITE_PATH
export TEMP_HDFS_DIRECTORY
export NIFI_SSL_ENABLED
export NIFI_USER
export NIFI_PASSWORD
export OZONE_VOLUME
export OZONE_BUCKET
export OZONE_LOC_PATH
export OZONE_TEMP_PATH
export OZONE_SERVICE_ID
export LOG_PATH

